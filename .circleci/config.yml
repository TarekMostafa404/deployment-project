version: 2.1

jobs:
  deploy:
    docker:
      - image: cimg/node:16.14
    steps:
      - checkout
      # - restore_cache:
      #     keys:
      #       - v1-dependencies-{{ checksum "package.json" }}
      #       - v1-dependencies-
      # - run:
      #     name: Install Dependencies
      #     command: npm install
      # - save_cache:
      #     paths:
      #       - node_modules
      #     key: v1-dependencies-{{ checksum "package.json" }}

      # - run:
      #     name: Run Tests
      #     command: npm run test

      - run:
          name: Run install frontend
          command: npm run frontend:install

      - run:
          name: Run Build frontend
          command: npm run frontend:build

      - run:
          name: Run install backend
          command: npm run backend:install

      - run:
          name: Run Build backend
          command: npm run backend:build

workflows:
  build_deploy:
    jobs:
      - deploy
# ==================================================
# version: 2.1
# orbs:
#   node: circleci/node@1.1.6
#   aws-s3: circleci/aws-s3@1.0.15
# executors:
#   my-node:
#     docker:
#       - image: 'cimg/node:16.14'
# jobs:
#   test-and-build:
#     executor: my-node
#     steps:
#       # - checkout
#       # - node/with-cache:
#       #     steps:
#       #       - run: npm install
#       #       - run: npm test
#       # - run: npm run build
#       # - node/install
#       - checkout
#       - run: node --version
#       - run:
#           name: Front-End Install
#           command: |
#             npm run frontend:install
#       - run:
#           name: Back-End Install
#           command: |
#             npm run backend:install
#       - run:
#           name: Front-End Build
#           command: |
#             npm run frontend:build
#       - run:
#           name: Back-End Build
#           command: |
#             npm run backend:build
#       - persist_to_workspace:
#           root: ~/
#           paths:
#             - udagram-frontend/www
#   deploy-to-s3:
#     machine:
#       image: circleci/classic:latest
#     steps:
#       - checkout
#       - attach_workspace:
#           at: ~/
#       - aws-s3/sync:
#           arguments: |
#             --acl public-read \
#             --cache-control "max-age=86400"
#           from: www
#           to: 's3://fullstack-udagram'
#           overwrite: true # default is false
# workflows:
#   build-and-deploy:
#     jobs:
#       - test-and-build
#       - deploy-to-s3:
#           requires:
#             - test-and-build
#           filters:
#             branches:
#               only: master
# ============================================================
# version: 2.1
# orbs:
#   node: circleci/node@4.1.0
#   # aws-cli: circleci/aws-cli@1.3.1
#   aws-s3: circleci/aws-s3@1.0.15
# jobs:
#   build:
#     docker:
#       - image: "cimg/node:16.14"
#     steps:
#       # - node/install
#       - checkout
#       - run: node --version
#       - run:
#           name: Front-End Install
#           command: |
#             npm run frontend:install
#       - run:
#           name: Back-End Install
#           command: |
#             npm run backend:install
#       - run:
#           name: Front-End Build
#           command: |
#             npm run frontend:build
#       - run:
#           name: Back-End Build
#           command: |
#             npm run backend:build
#   deploy:
#     docker:
#       image: circleci/classic:latest
#     steps:
#       - checkout
#       - attach_workspace:
#           at: ~/
#       - aws-s3/sync:
#           arguments: |
#             --acl public-read \
#             --cache-control "max-age=86400"
#           from: www
#           to: 's3://fullstack-udagram'
#           overwrite: true # default is false
